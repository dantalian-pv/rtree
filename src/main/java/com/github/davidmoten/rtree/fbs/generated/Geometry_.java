// automatically generated by the FlatBuffers compiler, do not modify

package com.github.davidmoten.rtree.fbs.generated;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Geometry_ extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static Geometry_ getRootAsGeometry_(ByteBuffer _bb) { return getRootAsGeometry_(_bb, new Geometry_()); }
  public static Geometry_ getRootAsGeometry_(ByteBuffer _bb, Geometry_ obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Geometry_ __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte type() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public com.github.davidmoten.rtree.fbs.generated.BoxFloat_ boxFloat() { return boxFloat(new com.github.davidmoten.rtree.fbs.generated.BoxFloat_()); }
  public com.github.davidmoten.rtree.fbs.generated.BoxFloat_ boxFloat(com.github.davidmoten.rtree.fbs.generated.BoxFloat_ obj) { int o = __offset(6); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public com.github.davidmoten.rtree.fbs.generated.PointFloat_ pointFloat() { return pointFloat(new com.github.davidmoten.rtree.fbs.generated.PointFloat_()); }
  public com.github.davidmoten.rtree.fbs.generated.PointFloat_ pointFloat(com.github.davidmoten.rtree.fbs.generated.PointFloat_ obj) { int o = __offset(8); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public com.github.davidmoten.rtree.fbs.generated.CircleFloat_ circleFloat() { return circleFloat(new com.github.davidmoten.rtree.fbs.generated.CircleFloat_()); }
  public com.github.davidmoten.rtree.fbs.generated.CircleFloat_ circleFloat(com.github.davidmoten.rtree.fbs.generated.CircleFloat_ obj) { int o = __offset(10); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public com.github.davidmoten.rtree.fbs.generated.BoxFloat_ lineFloat() { return lineFloat(new com.github.davidmoten.rtree.fbs.generated.BoxFloat_()); }
  public com.github.davidmoten.rtree.fbs.generated.BoxFloat_ lineFloat(com.github.davidmoten.rtree.fbs.generated.BoxFloat_ obj) { int o = __offset(12); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public com.github.davidmoten.rtree.fbs.generated.BoxDouble_ boxDouble() { return boxDouble(new com.github.davidmoten.rtree.fbs.generated.BoxDouble_()); }
  public com.github.davidmoten.rtree.fbs.generated.BoxDouble_ boxDouble(com.github.davidmoten.rtree.fbs.generated.BoxDouble_ obj) { int o = __offset(14); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public com.github.davidmoten.rtree.fbs.generated.PointDouble_ pointDouble() { return pointDouble(new com.github.davidmoten.rtree.fbs.generated.PointDouble_()); }
  public com.github.davidmoten.rtree.fbs.generated.PointDouble_ pointDouble(com.github.davidmoten.rtree.fbs.generated.PointDouble_ obj) { int o = __offset(16); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public com.github.davidmoten.rtree.fbs.generated.CircleDouble_ circleDouble() { return circleDouble(new com.github.davidmoten.rtree.fbs.generated.CircleDouble_()); }
  public com.github.davidmoten.rtree.fbs.generated.CircleDouble_ circleDouble(com.github.davidmoten.rtree.fbs.generated.CircleDouble_ obj) { int o = __offset(18); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }
  public com.github.davidmoten.rtree.fbs.generated.BoxDouble_ lineDouble() { return lineDouble(new com.github.davidmoten.rtree.fbs.generated.BoxDouble_()); }
  public com.github.davidmoten.rtree.fbs.generated.BoxDouble_ lineDouble(com.github.davidmoten.rtree.fbs.generated.BoxDouble_ obj) { int o = __offset(20); return o != 0 ? obj.__assign(o + bb_pos, bb) : null; }

  public static void startGeometry_(FlatBufferBuilder builder) { builder.startTable(9); }
  public static void addType(FlatBufferBuilder builder, byte type) { builder.addByte(0, type, 0); }
  public static void addBoxFloat(FlatBufferBuilder builder, int boxFloatOffset) { builder.addStruct(1, boxFloatOffset, 0); }
  public static void addPointFloat(FlatBufferBuilder builder, int pointFloatOffset) { builder.addStruct(2, pointFloatOffset, 0); }
  public static void addCircleFloat(FlatBufferBuilder builder, int circleFloatOffset) { builder.addStruct(3, circleFloatOffset, 0); }
  public static void addLineFloat(FlatBufferBuilder builder, int lineFloatOffset) { builder.addStruct(4, lineFloatOffset, 0); }
  public static void addBoxDouble(FlatBufferBuilder builder, int boxDoubleOffset) { builder.addStruct(5, boxDoubleOffset, 0); }
  public static void addPointDouble(FlatBufferBuilder builder, int pointDoubleOffset) { builder.addStruct(6, pointDoubleOffset, 0); }
  public static void addCircleDouble(FlatBufferBuilder builder, int circleDoubleOffset) { builder.addStruct(7, circleDoubleOffset, 0); }
  public static void addLineDouble(FlatBufferBuilder builder, int lineDoubleOffset) { builder.addStruct(8, lineDoubleOffset, 0); }
  public static int endGeometry_(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Geometry_ get(int j) { return get(new Geometry_(), j); }
    public Geometry_ get(Geometry_ obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

